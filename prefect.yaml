# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: mlops_zoom
prefect-version: 2.14.10

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: thecr7guy/test_1
    tag: latest
    dockerfile: auto

# push section allows you to manage if and how this project is uploaded to remote locations
push:
# - prefect_docker.deployments.steps.push_docker_image:
#     requires: prefect-docker>=0.3.1
#     image_name: '{{ build_image.image_name }}'
#     tag: '{{ build_image.tag }}'
# - prefect_aws.deployments.steps.push_to_s3:
#     id: push_code
#     requires: prefect-aws>=0.3.4
#     bucket: pricemyride
#     folder: mlops_zoom

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    repository: https://github.com/thecr7guy2/mlops_zoom.git
    branch: main
    access_token: null

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: train_deployement
  version:
  tags: []
  description:
  schedule:
  entrypoint: train/pipelines/train_pipe.py:main_flow
  parameters: {}
  work_pool:
    name: abc
    work_queue_name:
    job_variables:
      image: '{{ build_image.image }}'

- name: test2
  version:
  tags: []
  description:
  entrypoint: train/pipelines/train_pipe.py:main_flow
  parameters: {}
  work_pool:
    name: abc
    work_queue_name:
    job_variables:
      env:
        EXTRA_PIP_PACKAGES: "boto3 pandas prefect mlflow xgboost scikit-learn optuna prefect-aws"
  schedule:
